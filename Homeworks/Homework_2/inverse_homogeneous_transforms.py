#This code finds the inverse transformation
import numpy as np

#Given p_xiny, R_xiny
p_8in9 = np.array([[-0.95171584], [-0.84375482], [0.44621939]])
R_8in9 = np.array([[-0.07383872, -0.85846864, -0.50752284], [-0.60832922, 0.44203715, -0.65919551], [0.79024262, 0.26006682, -0.55487102]])

#Calculate p_yinx, R_yinx
#R_yinx = R_xiny^T
R_9in8 = np.transpose(R_8in9)
#p_yinx = -R_xiny^T p_xiny
p_9in8 =  - np.dot(R_9in8, p_8in9)
print(R_9in8)
print(p_9in8)

import numpy as np

A = np.array([[0.16209318, -0.17697434, -0.97077592, 0.56083800], [0.26250134, 0.95607135, -0.13046308, -0.95575049], [0.95121966, -0.23368280, 0.20142865, -0.81096743], [0.00000000, 0.00000000, 0.00000000, 1.00000000]])
B = np.array([[-0.99265869, -0.07148324, -0.09756475, -0.27387384], [0.03833416, -0.95101485, 0.30675927, 0.11093710], [-0.11471367, 0.30076719, 0.94677340, 0.53364918], [0.00000000, 0.00000000, 0.00000000, 1.00000000]])
p_sensor = np.array([[-0.06922801], [-0.42881789], [0.75338720],[1]])

new = np.dot(B,p_sensor)
new = np.dot(A,new)
print(new)